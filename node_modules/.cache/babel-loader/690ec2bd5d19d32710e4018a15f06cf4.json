{"ast":null,"code":"var _jsxFileName = \"/Users/kangjiyeon/hello-react/src/Counter.js\";\nimport React, { Component } from 'react';\nconst pad20 = {\n  padding: '20px 20px'\n};\n\nclass Counter extends Component {\n  //state : 동적인 데이터를 다룰때 사용함 \n\n  /*\n  state = {\n      number : 0\n  }\n  */\n  //class fileds를 사용하는 대신 constructor \n  //컴포턴트를 상속받으면서 그의 변수를 this.state를 사용하면서 덮어 쓰게됨 \n  //그래서 this.state 해주기전에 super해서 보내줘야 함 \n  //왜냐면 class 필드기 constructor 보다 빨리 실행됨, 그래서 super로 보내고, 변수 정의\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0\n    }; //함수를 handleIncrease = () => 의 형식으로 정의 하지 않았을 경우\n    //함수를 찾지 못하는 에러가 발생하기 때문에 this.함수이름 으로 이벤트 bind해줘야 함\n\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecreate = this.handleDecreate.bind(this);\n  }\n\n  //handleIncrease = () => {\n  handleIncrease() {\n    this.setState({\n      number: this.state.number + 1\n    });\n    /*\n        this.setState( \n            (state) => ({\n                number : state.number\n            })\n        );\n    */\n\n    /*\n        this.setState(\n            ({ number }) => ({\n                number : number + 1\n            })\n        );\n    */\n\n    /*\n        const { number } = this.state;\n         this.setState({\n            number : number + 1\n        })\n    */\n  } //handleDecreate = () => {\n\n\n  handleDecreate() {\n    this.setState({\n      number: this.state.number >= 1 ? this.state.number - 1 : 0\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\uCE74\\uC6B4\\uD130\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\uAC12 : \", this.state.number), React.createElement(\"button\", {\n      onClick: this.handleIncrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: this.handleDecreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"-\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/kangjiyeon/hello-react/src/Counter.js"],"names":["React","Component","pad20","padding","Counter","constructor","props","state","number","handleIncrease","bind","handleDecreate","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAG;AADA,CAAd;;AAIA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5B;;AACA;;;;;AAKA;AACA;AACA;AACA;AAEAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG;AADA,KAAb,CAFe,CAMf;AACA;;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAED;AACAD,EAAAA,cAAc,GAAG;AACb,SAAKG,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAC,KAAKD,KAAL,CAAWC,MAAX,GAAoB;AADjB,KAAd;AAIA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;AAOH,GAtD2B,CAyD5B;;;AACAG,EAAAA,cAAc,GAAG;AACb,SAAKC,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,IAAqB,CAArB,GAAyB,KAAKD,KAAL,CAAWC,MAAX,GAAoB,CAA7C,GAAiD;AAD/C,KAAd;AAGH;;AAEDK,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAU,KAAKN,KAAL,CAAWC,MAArB,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADJ;AAQH;;AAzE2B;;AA4EhC,eAAeP,OAAf","sourcesContent":["import React, {Component} from 'react';\n\nconst pad20 = {\n    padding : '20px 20px',\n};\n\nclass Counter extends Component {\n\n    //state : 동적인 데이터를 다룰때 사용함 \n    /*\n    state = {\n        number : 0\n    }\n    */\n    //class fileds를 사용하는 대신 constructor \n    //컴포턴트를 상속받으면서 그의 변수를 this.state를 사용하면서 덮어 쓰게됨 \n    //그래서 this.state 해주기전에 super해서 보내줘야 함 \n    //왜냐면 class 필드기 constructor 보다 빨리 실행됨, 그래서 super로 보내고, 변수 정의\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            number : 0\n        };\n\n        //함수를 handleIncrease = () => 의 형식으로 정의 하지 않았을 경우\n        //함수를 찾지 못하는 에러가 발생하기 때문에 this.함수이름 으로 이벤트 bind해줘야 함\n        this.handleIncrease = this.handleIncrease.bind(this);\n        this.handleDecreate = this.handleDecreate.bind(this);\n    };\n \n    //handleIncrease = () => {\n    handleIncrease() {\n        this.setState({\n            number:this.state.number + 1\n        });\n\n        /*\n            this.setState( \n                (state) => ({\n                    number : state.number\n                })\n            );\n        */\n\n        /*\n            this.setState(\n                ({ number }) => ({\n                    number : number + 1\n                })\n            );\n        */\n\n        /*\n            const { number } = this.state;\n\n            this.setState({\n                number : number + 1\n            })\n        */\n    }\n     \n\n    //handleDecreate = () => {\n    handleDecreate() {\n        this.setState({\n            number: this.state.number >= 1 ? this.state.number - 1 : 0\n        });\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>카운터</h1>\n                <div>값 : {this.state.number}</div>\n                <button onClick={this.handleIncrease}>+</button>\n                <button onClick={this.handleDecreate}>-</button>\n            </div>\n        );\n    }\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}